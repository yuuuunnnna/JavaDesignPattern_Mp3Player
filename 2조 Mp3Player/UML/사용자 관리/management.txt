옵저버 패턴 - 사용자 관리

옵저버 패턴은 데이터의 변경이 발생되었을 경우 상대 클래스나 객체에 의존하지 않으면서 데이터 변경을
통보하고자 할 때 유용하다

SubjectManage (관찰 대상)은 Observer(관찰자) 들의 항목을 가지고 있음 subjectManage가 변경되었을 때
Observer들에게 자신의 변경 사실을 통보하는 구조로 설계하였다.
하나의 관리 대상이 아닌 여러 관리 대상(AdminDisplay,NormalDisplay)을 가지고 관리할 수 있도록 Observer를 인터페이스로 구현하였다.

Person 클래스 사용 이유
1. 원하는 사용자의 정보를 수정할 시 정보를 얻는 부분이 까다로운 부분이 많아, Person 클래스를 이용해 getter와 setter를 이용하였다.
2. 사용자의 정보 요소가 많아서 관리 하기 힘들기에, Person 클래스를 사용하여 사용자의 정보를 따로 관리하게 하였다.
